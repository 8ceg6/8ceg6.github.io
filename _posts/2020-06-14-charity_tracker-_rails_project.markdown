---
layout: post
title:      "Charity Tracker- Rails Project"
date:       2020-06-14 19:12:00 -0400
permalink:  charity_tracker-_rails_project
---


For my rails project I chose to make a simple app that tracks the donations of a donor to charities. It consisted of three tables. To meet one of the requirements of the project I used the `donations`  table as the join table to make the connection between the  `donors ` and ` charities ` tables. Applying the has_many_through Macro a donor(user) is able to select or create a charity to donate to. This was implemented by using a nested route. The format of the route is `donors/:id/donations/new ` this approach made use of the join table through donations. After submitting a donation, the donor is ` redirected to ` the ` donors/:id/donations ` show page. On this page a view displays the charities of which they donated to along with the amount and date. With the use of a ` scope query ` this view page also displays the total amount of money they have donated to charities. 
A particular portion of this project gave me a lot of problems and that was the ` omniauth ` login. My particular issue was that when a new donor would try to ` Sign up ` using this approach it would not save to the database. After (several hours) of trying different approaches on how I could find out why t would not save. I used a technique I saw in a study video. It is called ` raise (class name).errors.full_messages.inspect ` . Using this method gave me the information needed to figure out how to set up my variables. I was missing one of the ` params ` needed to make a successful callback and create the user. This method going to be a very essential tool, along with others, going forward when debugging is needed. I must add that nothing beats that satisfying feeling you get when overcome something that is very challenging. I still have a long walk on short path but I will make it successfully. 

BLOG UPDATE 9/22/20 
After my initial evaluation I had to go back and figure out why certain parts of my code where not working prpoerly. This error I was confronted with dealt with displaying `errors` for incorrect inputs. I would see the `layout for errors` be requested in the terminal yet it did not display on the screen. At this time I revisited the section on learn.co where I was able to make the proper correction. My issue was that the code in the in application was set up to `redirect` the user back to the page where they could input the correct information to proceed. By doing this it did nt allow the errors to display. The proper  code that should have been  used was `render`. Not only is the `render` page option needed to display any error messages you may have in your `layouts` but it also helps speed up your application by not having to request all the data needed to display that particular view again. 

